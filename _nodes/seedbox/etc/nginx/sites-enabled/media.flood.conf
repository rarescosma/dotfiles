proxy_cache_path /mnt/media/.nginxthumbs levels=1:2 keys_zone=thumbnail_cache:16M inactive=60d max_size=1200M;

server {
  listen 10199;
  server_name localhost;

  image_filter_jpeg_quality 85;
  image_filter_buffer 12M;
  image_filter_interlace on;

  root /mnt/media;

  location ~ ^/Photos/Albums/([^/]+)/t/([\d-]+)x([\d-]+)/(.*) {
    alias "/mnt/media/Photos/Albums/$1/$4";
    image_filter resize $2 $3;
  }
}

server {
  server_name    media.flood.getbetter.ro;

  access_log /var/log/nginx/media.flood.out.log;
  error_log /var/log/nginx/media.flood.err.log;

  root /mnt/media;

  location / {
    auth_basic "Hi";
    auth_basic_user_file /etc/nginx/htpasswd;

    if (-f $request_filename) {
      access_log off;
      expires 30d;
      break;
    }

    fancyindex on;
    fancyindex_exact_size off;
    fancyindex_ignore "lost\+found";
    fancyindex_header /.fancyindex/header.html;
    fancyindex_footer /.fancyindex/footer.html;
    fancyindex_css_href /.fancyindex/style.css;
  }

  location ~ ^/.fancyindex/(.*) {
    auth_basic off;
  }

  location ~ ^/Photos/.js/(.*) {
    auth_basic off;
  }

  location ~ ^/Photos/Albums/([^/]+)/t/([\d-]+)x([\d-]+)/(.*) {
    proxy_pass http://localhost:10199;
    proxy_cache thumbnail_cache;
    proxy_cache_key "$host$document_uri$is_args";
    proxy_cache_lock on;
    proxy_cache_valid 30d;      # Cache valid thumbnails for 30 days.
    proxy_cache_valid any 15s;  # Everything else gets 15s.
    proxy_cache_use_stale error timeout invalid_header updating;
    proxy_http_version 1.1;
    expires 30d;
    auth_basic off;
  }

  location ~ /Photos/Albums/(.+)/$ {
    autoindex on;
    autoindex_format xml;
    xslt_string_param title $1;
    xslt_stylesheet /etc/nginx/gallery.xslt;
    try_files $uri/ =404;
    auth_basic off;
  }

  listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/flood.getbetter.ro-0003/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/flood.getbetter.ro-0003/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

  if ($scheme != "https") {
    return 301 https://$host$request_uri;
  } # managed by Certbot



}

server {
  if ($host = media.flood.getbetter.ro) {
    return 301 https://$host$request_uri;
  } # managed by Certbot


  listen 80;

  server_name media.flood.getbetter.ro;
  return 404; # managed by Certbot
}
